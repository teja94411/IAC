{
    "sourceFile": "AWS_Resources/modules/elb/main.tf",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1737189603740,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1737189603740,
            "name": "Commit-0",
            "content": "resource \"aws_vpc\" \"myvpc\" {\r\n  cidr_block = var.vpc_cidr\r\n}\r\n\r\nresource \"aws_subnet\" \"sub_1\" {\r\n  vpc_id            = aws_vpc.myvpc.id\r\n  cidr_block        = var.aws_subnet_1\r\n  availability_zone = var.availability_zone_s1\r\n}\r\n\r\nresource \"aws_subnet\" \"sub_2\" {\r\n  vpc_id            = aws_vpc.myvpc.id\r\n  cidr_block        = var.aws_subnet_2\r\n  availability_zone = var.availability_zone_s2\r\n}\r\n\r\nresource \"aws_security_group\" \"nsg\" {\r\n  vpc_id = aws_vpc.myvpc.id\r\n\r\n  ingress {\r\n    description = \"Allow SSH\"\r\n    from_port   = 22\r\n    to_port     = 22\r\n    protocol    = \"tcp\"\r\n    cidr_blocks = var.ingress_sg\r\n  }\r\n\r\n  ingress {\r\n    description = \"Allow HTTP\"\r\n    from_port   = 80\r\n    to_port     = 80\r\n    protocol    = \"tcp\"\r\n    cidr_blocks = var.ingress_sg\r\n  }\r\n\r\n  ingress {\r\n    description = \"Allow HTTPS\"\r\n    from_port   = 443\r\n    to_port     = 443\r\n    protocol    = \"tcp\"\r\n    cidr_blocks = var.ingress_sg\r\n  }\r\n\r\n  egress {\r\n    from_port   = 0\r\n    to_port     = 0\r\n    protocol    = \"-1\"\r\n    cidr_blocks = var.egress_sg\r\n  }\r\n}\r\n\r\nresource \"aws_lb\" \"test-lb\" {\r\n  name               = \"test-lb\"\r\n  internal           = false\r\n  load_balancer_type = \"application\"\r\n  security_groups    = [aws_security_group.nsg.id]\r\n  subnets            = [aws_subnet.sub_1.id, aws_subnet.sub_2.id]\r\n  ip_address_type    = \"ipv4\"\r\n}\r\n\r\nresource \"aws_lb_target_group\" \"tg\" {\r\n  name     = \"test-tg\"\r\n  port     = 80\r\n  protocol = \"HTTP\"\r\n  vpc_id   = aws_vpc.myvpc.id\r\n\r\n  health_check {\r\n    path                = \"/\"\r\n    interval            = 30\r\n    timeout             = 5\r\n    healthy_threshold   = 2\r\n    unhealthy_threshold = 2\r\n    matcher             = \"200\"\r\n  }\r\n}\r\n\r\nresource \"aws_lb_listener\" \"http\" {\r\n  load_balancer_arn = aws_lb.test-lb.arn\r\n  port              = 80\r\n  protocol          = \"HTTP\"\r\n\r\n  default_action {\r\n    type             = \"forward\"\r\n    target_group_arn = aws_lb_target_group.tg.arn\r\n  }\r\n}\r\n\r\nresource \"aws_internet_gateway\" \"igw\" {\r\n  vpc_id = aws_vpc.myvpc.id\r\n}"
        }
    ]
}